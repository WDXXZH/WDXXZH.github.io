<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>函数指针与typedef</title>
    <url>/posts/1fd5e519/</url>
    <content><![CDATA[<h1 id="函数指针"><a href="#函数指针" class="headerlink" title="函数指针"></a>函数指针</h1><p>格式:</p>
<p><code>指针类型 (*函数指针名称)(函数指针参数)</code></p>
<ul>
<li>定义一个函数指针 func_1</li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">func</span><span class="params">(<span class="type">int</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;func\r\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc,<span class="type">char</span>* argv[])</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> (*func_1)(<span class="type">int</span>) = <span class="literal">NULL</span>;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%p\r\n&quot;</span>,func_1);</span><br><span class="line">	func_1 = &amp;func;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%p\r\n%p\r\n&quot;</span>,func,func_1);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p> <strong>结果 :</strong></p>
<img src="/posts/1fd5e519/image-20240723152721091.png" class title="image-20240723152721091">
<ul>
<li><p>定义一个参数和返回值都是函数的函数指针 MyFunction</p>
<p>其中<code>int(*MyFunction(void (* pArg)(void)))(int)</code></p>
<p>第一个 int 表明 MyFunction 类型</p>
<p>第二个 int 表明 MyFunction 返回类型</p>
<p>(void (* pArg)(void)) 为 MyFunction 的参数，为一个没有类型和返回值的函数</p>
</li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">FunArg</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;FunArg，一个没有参数和返回值的函数\r\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">FunReturn</span><span class="params">(<span class="type">int</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;FunReturn，一个有int参数和int返回值的函数\r\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span>(*MyFunction(<span class="type">void</span> (* pArg)(<span class="type">void</span>)))(<span class="type">int</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;MyFunction，一个有函数参数和函数返回值的函数\r\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc,<span class="type">char</span>* argv[])</span></span><br><span class="line">&#123;</span><br><span class="line">    MyFunction(FunArg);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>结果 :</strong></p>
 <img src="/posts/1fd5e519/image-20240723161822577.png" class title="image-20240723161822577">
<p><strong>MyFunction 被成功调用，但 FunArg 未被调用，FunArg 只是 MyFunction 被成功调用需满足的条件。</strong></p>
<h1 id="typedef"><a href="#typedef" class="headerlink" title="typedef"></a>typedef</h1><p><code>typedef 原类型名 新名称</code></p>
<p>目的 : 增强代码的可读性</p>
<p><code>void FunArg()--&gt;void (*FunArg)()--&gt;typedef void (*PFN_ARG)()</code></p>
<p>typedef 与函数指针</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">FunArg</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;FunArg，一个没有参数和返回值的函数\r\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">FunReturn</span><span class="params">(<span class="type">int</span> arg)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;FunReturn，一个有int参数和int返回值的函数\r\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="title function_">void</span><span class="params">(*PFN_ARG)</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="title function_">int</span><span class="params">(*PFN_RETURN)</span><span class="params">(<span class="type">int</span>)</span>;</span><br><span class="line"></span><br><span class="line">PFN_RETURN <span class="title function_">MyFunction</span><span class="params">(PFN_ARG arg)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;MyFunction，一个有函数参数和函数返回值的函数\r\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> FunReturn;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span>* argv[])</span></span><br><span class="line">&#123;</span><br><span class="line">    MyFunction(FunArg);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p><strong>结果 :</strong></p>
<img src="/posts/1fd5e519/image-20240723161732004.png" class title="image-20240723161732004">
<p>个人解读 :</p>
<p> 定义过<code>typedef void(*PFN_ARG)(void);</code>和<code>typedef int(*PFN_RETURN)(int);</code>后，可使用 PFN_ARG 定义一个没有参数和返回值的函数，使用 PFN_RETURN 定义一个参数和返回值都是 int 的函数。</p>
<p> 在<code>PFN_RETURN MyFunction(PFN_ARG arg)</code>中，可看出 MyFunction 的参数是一个没有参数和返回值的函数，在 MyFunction 中用 arg 命名；而 MyFunction 是一个参数和返回值都为 int 函数的函数，所以 MyFunction 函数内，返回值为<code>return FunReturn;</code>，因为 FunReturn 是一个返回值为 int 的函数。</p>
<div class="note no-icon simple"><p><strong>参考链接 :</strong></p>
<p><a href="https://blog.csdn.net/Dasis/article/details/123110098?ops_request_misc=&amp;request_id=&amp;biz_id=102&amp;utm_term=typedef函数指针&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-1-123110098.142^v100^pc_search_result_base4&amp;spm=1018.2226.3001.4187">C 语言基础入门 48 篇<em>38</em>函数指针与 typedef（函数指针即指向函数的指针、函数指针定义 int (*pfn)(int)、typedef 给数据类型起别名，起到的作用一致、typedef 简化函数指针）_函数指针 typedef-CSDN 博客</a></p>
</div>]]></content>
      <categories>
        <category>C语言</category>
      </categories>
  </entry>
  <entry>
    <title>BT 和 BLE</title>
    <url>/posts/0/</url>
    <content><![CDATA[<p>施工中</p>
<p>BT：BlueTooth</p>
<p>BLE：BlueTooth Low Energy</p>
<p>设备只支持其中一个为单模，两种都支持为双模</p>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center"></th>
<th style="text-align:center"></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">4.2</td>
<td style="text-align:center">BT</td>
<td>BLE</td>
</tr>
<tr>
<td style="text-align:center">距离</td>
<td style="text-align:center">100m</td>
<td>&gt;100m</td>
</tr>
<tr>
<td style="text-align:center">数据速率</td>
<td style="text-align:center">1-3Mbps</td>
<td>1Mbps</td>
</tr>
<tr>
<td style="text-align:center">应用吞吐量</td>
<td style="text-align:center">0.7-2.1Mbps</td>
<td>0.27Mbps</td>
</tr>
<tr>
<td style="text-align:center">延时</td>
<td style="text-align:center">100ms</td>
<td>6ms</td>
</tr>
<tr>
<td style="text-align:center">时间间隔</td>
<td style="text-align:center">100ms</td>
<td>3ms</td>
</tr>
<tr>
<td style="text-align:center">功耗</td>
<td style="text-align:center">1W</td>
<td>0.01~0.5W</td>
</tr>
</tbody>
</table>
</div>
<p>BT：可以传输声音，传输大量数据</p>
<p>BLE：数据量小</p>
]]></content>
      <categories>
        <category>BlueTooth</category>
      </categories>
  </entry>
  <entry>
    <title>PID</title>
    <url>/posts/c3f78667/</url>
    <content><![CDATA[<p>施工中</p>
<p>PID控制器是最常用的反馈控制器之一，通过调整比例（P）、积分（I）和微分（D）三个参数来实现控制。</p>
<ul>
<li><strong>比例控制（P）</strong>：根据当前误差值调整控制输出，反应迅速，但可能会有稳态误差。</li>
<li><strong>积分控制（I）</strong>：根据误差的累积调整控制输出，消除稳态误差，但可能会导致超调。</li>
<li><strong>微分控制（D）</strong>：根据误差的变化率调整控制输出，增加系统的阻尼，减少超调。</li>
</ul>
<p>PID控制器的公式如下：</p>
<script type="math/tex; mode=display">
u(t) = K_pe(t)+K_i \int e(t)dt+K_d\frac{de(t)}{dt}</script><p>$U(t)$:：控制输出</p>
<p>$e(t)$：误差</p>
<p>$K_p$ ：比例</p>
<p>$K_i$ ：积分</p>
<p>$K_d$ ：微分增益</p>
]]></content>
      <categories>
        <category>PID</category>
      </categories>
  </entry>
  <entry>
    <title>stm32初始化uart -ing</title>
    <url>/posts/abe992b9/</url>
    <content><![CDATA[<h2 id="开启时钟复用"><a href="#开启时钟复用" class="headerlink" title="开启时钟复用"></a>开启时钟复用</h2><p><code>RCC_APB2PeriphClockCmd(RCC_APB2Periph_USART1 | RCC_APB2Periph_GPIOA, ENABLE);</code> </p>
<h2 id="GPIO端口模式设置"><a href="#GPIO端口模式设置" class="headerlink" title="GPIO端口模式设置"></a>GPIO端口模式设置</h2><p>PA9 发送脚，发送0、1高低电平，设置为推挽输出模式，输出0v或3.3v电压</p>
<p>PA10 接收脚，接受高低电平，设置为浮空输入模式</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// A9</span></span><br><span class="line">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_9;</span><br><span class="line"><span class="comment">// 复用推挽输出</span></span><br><span class="line">GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;</span><br><span class="line">GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">GPIO_Init(GPIOA, &amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line"><span class="comment">// A10</span></span><br><span class="line">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_10;</span><br><span class="line"><span class="comment">// 设置为浮空输入</span></span><br><span class="line">GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;</span><br><span class="line">GPIO_Init(GPIOA, &amp;GPIO_InitStructure);</span><br></pre></td></tr></table></figure>
<h2 id="USART-InitStructure"><a href="#USART-InitStructure" class="headerlink" title="USART_InitStructure"></a>USART_InitStructure</h2><mark class="hl-label green">异步模式</mark> 
<p>USART_BaudRate:   设置波特率  <code>9600 115200</code></p>
<p>USART_WordLength:  设置数据位长度 8bit或9bit <code>USART_WordLength_8b</code>、<code>USART_WordLength_9b</code></p>
<p>USART_StopBits:  停止位位数，取值0.5、1、1.5、2，常用<code>USART_StopBits_1</code></p>
<p>USART_Parity:  奇偶校验使能 ，奇偶<code>USART_Parity_No</code>、偶校验<code>USART_Parity_Even</code>、奇校验<code>USART_Parity_Odd</code></p>
<p>USART_HardwareFlowControl:  硬件流控制模式使能，用于处理数据丢失，一般不启用 <code>USART_HardwareFlowControl_None</code></p>
<p>USART_Mode:  收发模式使能 接收使能<code>USART_Mode_Rx</code>、发送使能<code>USART_Mode_Tx</code>，都使能时用<code>|</code>号连接</p>
<mark class="hl-label orange">同步模式需添加以下几项</mark> 
<p>USART_Clock:  时钟使能控制 <code>USART_Clock_Disable</code>、 <code>USART_Clock_Enable</code></p>
<p>USART_CPOL:  时钟输出极性 低电平<code>USART_CPOL_Low</code>、高电平<code>USART_CPOL_High</code></p>
<p>USART_CPHA:  时钟输出相位 设置在时钟第一个变化沿捕获数据<code>USART_CPHA_1Edge</code>、第二个…</p>
<p>USART_LastBit:  最后一位数据的时钟脉冲输出方式    输出脉冲<code>USART_LastBit_Disable</code>、不输出脉冲<code>USART_LastBit_Enable</code></p>
<h2 id="初始化串口"><a href="#初始化串口" class="headerlink" title="初始化串口"></a>初始化串口</h2><p><code>USART_Init(USART1, &amp;USART_InitStructure);</code></p>
<h2 id="USART-ITConfig"><a href="#USART-ITConfig" class="headerlink" title="USART_ITConfig"></a>USART_ITConfig</h2><p>USART_IT_PE                          奇偶错误中断<br>USART_IT_TXE                       发送中断<br>USART_IT_TC                          传输完成中断<br>USART_IT_RXNE                     接收中断<br>USART_IT_IDLE                      空闲总线中断<br>USART_IT_LBD                        LIN 中断检测中断<br>USART_IT_CTS                        CTS 中断<br>USART_IT_ERR                        错误中断</p>
<h2 id="USART-ClearFlag"><a href="#USART-ClearFlag" class="headerlink" title="USART_ClearFlag"></a>USART_ClearFlag</h2><p>清除标志位</p>
<p>清除发送标志位 <code>USART_FLAG_TC</code>  </p>
<h2 id="USART-Cmd"><a href="#USART-Cmd" class="headerlink" title="USART_Cmd"></a>USART_Cmd</h2><p>用于使能或关闭uart模块</p>
<h2 id="设置中断"><a href="#设置中断" class="headerlink" title="设置中断"></a>设置中断</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 开启中断</span></span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannel = USART1_IRQn;</span><br><span class="line"><span class="comment">// 抢占优先级 1</span></span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = <span class="number">1</span>;</span><br><span class="line"><span class="comment">// 子优先级 7</span></span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelSubPriority = <span class="number">7</span>;</span><br><span class="line"><span class="comment">// IRQ通道使能</span></span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;</span><br><span class="line"><span class="comment">// 初始化NVIC寄存器</span></span><br><span class="line">NVIC_Init(&amp;NVIC_InitStructure);</span><br></pre></td></tr></table></figure>
<mark class="hl-label blue">例程:</mark> 
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">Usart1Init</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> uiBaud)</span></span><br><span class="line">&#123;</span><br><span class="line">  GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class="line">  USART_InitTypeDef USART_InitStructure;</span><br><span class="line">  NVIC_InitTypeDef NVIC_InitStructure;</span><br><span class="line"></span><br><span class="line">  RCC_APB2PeriphClockCmd(RCC_APB2Periph_USART1 | RCC_APB2Periph_GPIOA, ENABLE);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// A9</span></span><br><span class="line">  GPIO_InitStructure.GPIO_Pin = GPIO_Pin_9;</span><br><span class="line">  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;</span><br><span class="line">  GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">  GPIO_Init(GPIOA, &amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// A10</span></span><br><span class="line">  GPIO_InitStructure.GPIO_Pin = GPIO_Pin_10;</span><br><span class="line">  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;</span><br><span class="line">  GPIO_Init(GPIOA, &amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 波特率 115200</span></span><br><span class="line">  USART_InitStructure.USART_BaudRate = <span class="number">115200</span>;</span><br><span class="line">  <span class="comment">// 数据位长度8bit</span></span><br><span class="line">  USART_InitStructure.USART_WordLength = USART_WordLength_8b;</span><br><span class="line">  <span class="comment">// 停止位位数 1</span></span><br><span class="line">  USART_InitStructure.USART_StopBits = USART_StopBits_1;</span><br><span class="line">  <span class="comment">// 奇偶校验使能 奇偶 no  偶 even  奇 odd</span></span><br><span class="line">  USART_InitStructure.USART_Parity = USART_Parity_No;</span><br><span class="line">  <span class="comment">// 硬件流控制模式使能，用于处理数据丢失，一般不启用</span></span><br><span class="line">  USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;</span><br><span class="line">  <span class="comment">// 发送接收模式使能 全部使能</span></span><br><span class="line">  USART_InitStructure.USART_Mode = USART_Mode_Rx | USART_Mode_Tx;</span><br><span class="line">  <span class="comment">// 初始化串口1</span></span><br><span class="line">  USART_Init(USART1, &amp;USART_InitStructure);</span><br><span class="line">  USART_ITConfig(USART1, USART_IT_TXE, DISABLE);</span><br><span class="line">  USART_ITConfig(USART1, USART_IT_RXNE, ENABLE);</span><br><span class="line">  USART_ClearFlag(USART1, USART_FLAG_TC);</span><br><span class="line">  USART_Cmd(USART1, ENABLE);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 开启中断</span></span><br><span class="line">  NVIC_InitStructure.NVIC_IRQChannel = USART1_IRQn;</span><br><span class="line">  <span class="comment">// 抢占优先级 1</span></span><br><span class="line">  NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = <span class="number">1</span>;</span><br><span class="line">  <span class="comment">// 子优先级 7</span></span><br><span class="line">  NVIC_InitStructure.NVIC_IRQChannelSubPriority = <span class="number">7</span>;</span><br><span class="line">  <span class="comment">// IRQ通道使能</span></span><br><span class="line">  NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;</span><br><span class="line">  <span class="comment">// 初始化NVIC寄存器</span></span><br><span class="line">  NVIC_Init(&amp;NVIC_InitStructure);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<div class="note no-icon simple"><p>参考链接: </p>
<p><a href="https://blog.csdn.net/zxh1592000/article/details/78656609">STM32系统学习——USART（串口通信）_usart智能卡通信-CSDN博客</a></p>
<p><a href="https://blog.csdn.net/AriesPIG/article/details/119840979">STM32之USART-串口通信（含串口实验详细解析）_stm32 串口11bit-CSDN博客</a></p>
<p><a href="https://blog.csdn.net/weixin_44234693/article/details/127452908">浅谈STM32 USART串口中断配置函数USART_ITConfig（）的编程思路-CSDN博客</a></p>
</div>]]></content>
      <categories>
        <category>stm32</category>
      </categories>
  </entry>
  <entry>
    <title>伺服电机控制探究</title>
    <url>/posts/83e63798/</url>
    <content><![CDATA[<p>施工中</p>
<h1 id="伺服电机"><a href="#伺服电机" class="headerlink" title="伺服电机"></a>伺服电机</h1><p>——-《电力拖动自动控制系统(第 5 版)(陈伯时)》——</p>
<h2 id="位置传感器"><a href="#位置传感器" class="headerlink" title="位置传感器"></a>位置传感器</h2><h3 id="电位器"><a href="#电位器" class="headerlink" title="电位器"></a>电位器</h3><h3 id="基于电磁感应原理的位置传感器"><a href="#基于电磁感应原理的位置传感器" class="headerlink" title="基于电磁感应原理的位置传感器"></a>基于电磁感应原理的位置传感器</h3><h3 id="光电编码器"><a href="#光电编码器" class="headerlink" title="光电编码器"></a>光电编码器</h3><p>由光源、光栅码盘和光敏元件 3 部分组成，直接输出数字是的电脉冲信号</p>
<h4 id="增量式编码器"><a href="#增量式编码器" class="headerlink" title="增量式编码器"></a>增量式编码器</h4><p>脉冲数与位移的增量成正比（只输出变化量）</p>
<h4 id="绝对值编码器"><a href="#绝对值编码器" class="headerlink" title="绝对值编码器"></a>绝对值编码器</h4><p>码盘由若干同心圆环构成的码道组成，码道的道数与二进制的位数相同。码盘一周的总集数为$N = 2^n$，n 为码道数</p>
<h5 id="二进制码盘"><a href="#二进制码盘" class="headerlink" title="二进制码盘"></a>二进制码盘</h5><h5 id="循环码码盘"><a href="#循环码码盘" class="headerlink" title="循环码码盘"></a>循环码码盘</h5><h4 id="磁性编码器"><a href="#磁性编码器" class="headerlink" title="磁性编码器"></a>磁性编码器</h4><p>将位移量转变为数字式脉冲信号的传感器</p>
<h2 id="伺服控制系统"><a href="#伺服控制系统" class="headerlink" title="伺服控制系统"></a>伺服控制系统</h2><p>伺服系统控制对象包括伺服电动机，驱动装置，机械传动系统</p>
<h3 id="直流伺服系统"><a href="#直流伺服系统" class="headerlink" title="直流伺服系统"></a>直流伺服系统</h3><h3 id="交流伺服系统"><a href="#交流伺服系统" class="headerlink" title="交流伺服系统"></a>交流伺服系统</h3><p>常用电机：三相异步电动机，永磁式同步电动机，磁阻式步进电动机，经过矢量变换、磁链定向和电流闭环控制均可等效为电流控制的直流电动机</p>
<h3 id="伺服系统的设计"><a href="#伺服系统的设计" class="headerlink" title="伺服系统的设计"></a>伺服系统的设计</h3><p>常用调节器：PI、PD、PID（P-比例；I-积分；D-微分）</p>
<p>内-&gt;外</p>
<p>电流(转矩)环+速度(转速)环+位置环</p>
<p>——-《电力拖动自动控制系统(第 5 版)(陈伯时)》——</p>
<img src="/posts/83e63798/2c1f7f58eba9482a97bd27cc4ba22005.png" class title="img">
]]></content>
      <categories>
        <category>伺服电机</category>
      </categories>
  </entry>
  <entry>
    <title>四元数</title>
    <url>/posts/68728ca3/</url>
    <content><![CDATA[<p>施工中</p>
<h1 id="欧拉角"><a href="#欧拉角" class="headerlink" title="欧拉角"></a>欧拉角</h1><p><style>.tqskptjhkcqb{zoom:80%;}</style><img src="/posts/68728ca3/d8153dec0e89c3d08b97716b72d01018.gif" class="tqskptjhkcqb" alt="img"></p>
<p><style>.rjwsqovirllo{zoom:67%;}</style><img src="/posts/68728ca3/b287b97e2d89452f4112256a80ccbd7d.png" class="rjwsqovirllo" alt="img"></p>
<p>坐标轴以原点为圆心转动，不管怎么转，转后坐标系都可以通过三个角在原坐标系上表达。</p>
<p>欧拉角可能会导致万向节死锁情况出现，任一坐标轴旋转角度为 90 度时，就会由两个轴的旋转动作起到的作用相同，形成死锁</p>
<p><style>.quwdkiqoibgt{zoom: 33%;}</style><img src="/posts/68728ca3/6d5e0fc22daf476d9b5ac99941bf4c02.gif" class="quwdkiqoibgt" alt="img"></p>
<h1 id="旋转矩阵"><a href="#旋转矩阵" class="headerlink" title="旋转矩阵"></a>旋转矩阵</h1><p>1.坐标变换</p>
<p><style>.xhcszmhydmlp{zoom:80%;}</style><img src="/posts/68728ca3/image-20240722102204803.png" class="xhcszmhydmlp" alt="image-20240722102204803"></p>
<p>如图所示，对于点 P 在不同坐标系下的表示，红色坐标系由黑色坐标系绕原点旋转$\alpha $° 得来；</p>
<p>其坐标变换关系如下 :</p>
<p>$P_{xa} =OM-P_{xa}M=P_{xb}<em>\cos{\alpha}-IP_{xb}</em>\cos{\alpha}$</p>
<p>$=P_{xb}<em>\cos{\alpha}-PI</em>{\sin{\alpha}}*{\cos{\alpha}}$</p>
<p> $=P_{xb}<em>\cos{\alpha}-\frac{PP_{xb}}{\cos{\alpha}}</em>{\sin{\alpha}}*{\cos{\alpha}}$</p>
<p>$=P_{xb}<em>\cos{\alpha}-PP_{xb}</em>{\sin{\alpha}}$</p>
<p>$=P_{xb}*\cos{\alpha} -P_{yb}{\sin{\alpha}}$</p>
<p>$P_{ya}=P_{xb}\sin{\alpha}+P_{yb}\cos{\alpha}$</p>
<p>$P_{za}=P_{zb}$</p>
<p>由上述式子可得矩阵 :</p>
<img src="/posts/68728ca3/image-20240722103355214.png" class title="image-20240722103355214">
<p><style>.uetsxuonhgly{zoom:80%;}</style><img src="/posts/68728ca3/image-20240722104206337.png" class="uetsxuonhgly" alt="image-20240722104206337"></p>
<p>想写出坐标系 B 相对于坐标系 A 的旋转矩阵，只需将坐标系 B 相对于坐标系 A 的方向余弦写成矩阵形式 :</p>
<p><style>.andjxbxntvqx{zoom:80%;}</style><img src="/posts/68728ca3/image-20240722104249976.png" class="andjxbxntvqx" alt="image-20240722104249976"></p>
<p><style>.iftmriyojanr{zoom:67%;}</style><img src="/posts/68728ca3/image-20240722104500401.png" class="iftmriyojanr" alt="image-20240722104500401"></p>
<p><style>.ndtmzgexbpwi{zoom:67%;}</style><img src="/posts/68728ca3/image-20240722112100493.png" class="ndtmzgexbpwi" alt="image-20240722112100493"></p>
<img src="/posts/68728ca3/image-20240722112317352.png" class title="image-20240722112317352">
<p>上为坐标系旋转，下为向量旋转</p>
<h1 id="四元数"><a href="#四元数" class="headerlink" title="四元数"></a>四元数</h1><p><style>.mprtszzweupx{zoom:80%;}</style><img src="/posts/68728ca3/image-20240715145743748.png" class="mprtszzweupx" alt="image-20240715145743748"></p>
<p>物理意义：按照特定的方向旋转 90 度</p>
<h2 id="四元数的定义"><a href="#四元数的定义" class="headerlink" title="四元数的定义"></a>四元数的定义</h2><p>· 对于基{ 1,i,j,k }的线性组合，向量形式 : $q = \begin{bmatrix}a\\b\\c\\d\end{bmatrix}$，( $i^2=j^2=k^2=ijk=-1$ )</p>
<p>· 将四元数的虚实部分开，使用三维向量来表示虚部，将它表示为标量和向量的有序形式 : $q = [ s , \vec{v} ]$, 其中 $\vec{v} = \begin{bmatrix}x\\y\\z\end{bmatrix}$, $\{ s\quad x\quad y\quad z \}\subseteq \mathbb{R}$</p>
<h2 id="四元数乘法"><a href="#四元数乘法" class="headerlink" title="四元数乘法"></a>四元数乘法</h2><p>$q_1q_2 = (a+bi+cj+dk)(e+fi+gj+hk)$ (复数式)</p>
<p>$=(a,\vec{v})(e,\vec{u})$</p>
<p>$=(ae-\vec{v}\centerdot\vec{u})+(a\vec{u}+e\vec{v}+\vec{v}\times\vec{u})$</p>
<p>$=[ae-\vec{v}\centerdot\vec{u}， a\vec{u}+e\vec{v}+\vec{v}\times\vec{u}]$ ( 矢量式 )</p>
<p>矩阵形式 :</p>
<p>$q_1q_2\neq q_2q_1$ <span style="background:yellow">左乘不等于右乘</span></p>
<p><style>.ciftehxgxfdu{zoom: 33%;}</style><img src="/posts/68728ca3/2063df47336e43f886c2fdd27bfaa231.gif" class="ciftehxgxfdu" alt="img"></p>
<p>$q_1q_2= \begin{bmatrix}a&amp;-b&amp;-c&amp;-d\\b&amp;a&amp;-d&amp;c\\c&amp;d&amp;a&amp;-b\\d&amp;-c&amp;b&amp;a\end{bmatrix}\begin{bmatrix}e\\f\\g\\h\end{bmatrix}$</p>
<p>$q_2q_1= \begin{bmatrix}a&amp;-b&amp;-c&amp;-d\\b&amp;a&amp;d&amp;-c\\c&amp;-d&amp;a&amp;b\\d&amp;c&amp;-b&amp;a\end{bmatrix}\begin{bmatrix}e\\f\\g\\h\end{bmatrix}$</p>
<p>左乘：左为动作，右为被操作对象</p>
<p>右乘：右为动作，左为被操作对象</p>
<h2 id="纯四元数"><a href="#纯四元数" class="headerlink" title="纯四元数"></a>纯四元数</h2><p>仅有虚部的四元数,也被称为单位四元数</p>
<script type="math/tex; mode=display">q=[0,\vec{v}]=xi+yj+zk</script><img src="/posts/68728ca3/image-20240716093117829.png" class title="image-20240716093117829">
<p>若：</p>
<img src="/posts/68728ca3/image-20240716091605318.png" class title="image-20240716091605318">
<p>此时</p>
<img src="/posts/68728ca3/image-20240716091620078.png" class title="image-20240716091620078">
<img src="/posts/68728ca3/image-20240716091628174.png" class title="image-20240716091628174">
<img src="/posts/68728ca3/image-20240716091641286.png" class title="image-20240716091641286">
<img src="/posts/68728ca3/image-20240716091655289.png" class title="image-20240716091655289">
<img src="/posts/68728ca3/image-20240716091713099.png" class title="image-20240716091713099">
<h2 id="实四元数"><a href="#实四元数" class="headerlink" title="实四元数"></a>实四元数</h2><p>虚部为 0 的四元数$q=[s,0]$</p>
<img src="/posts/68728ca3/image-20240716091852076.png" class title="image-20240716091852076">
<p>该乘积与虚部为 0 的两个虚数乘积相似</p>
<h2 id="四元数与标量乘积"><a href="#四元数与标量乘积" class="headerlink" title="四元数与标量乘积"></a>四元数与标量乘积</h2><p>( 标量 : 只有大小，没有方向的量 )<br>$\lambda=[\lambda,\vec{0}]$</p>
<img src="/posts/68728ca3/image-20240716092143817.png" class title="image-20240716092143817">
<h2 id="单位四元数"><a href="#单位四元数" class="headerlink" title="单位四元数"></a>单位四元数</h2><p>可通过向量与标量表示</p>
<script type="math/tex; mode=display">\vec{v}=\upsilon\hat{\nu}</script><p>其中$\upsilon=|\vec\nu|$，$|\hat{\nu}|=1$</p>
<p>即$\upsilon$表示$\vec{v}$的方向,$\hat{\nu}$表示$\vec{v}$的长度</p>
<img src="/posts/68728ca3/image-20240716094406781.png" class title="image-20240716094406781">
<p>我们可以使用一个向量（仅表示方向故长度为 0）和一个标量（仅表示长度没有方向）来表示单位四元数</p>
<img src="/posts/68728ca3/image-20240716094511774.png" class title="image-20240716094511774">
<p>使用单位四元数与四元数加法来表达普通四元数，且该结构形式与虚数结构形式（$z=a+bi$）相似</p>
<img src="/posts/68728ca3/image-20240716095129025.png" class title="image-20240716095129025">
<h2 id="共轭四元数-conjugate"><a href="#共轭四元数-conjugate" class="headerlink" title="共轭四元数 (conjugate)"></a>共轭四元数 (conjugate)</h2><img src="/posts/68728ca3/image-20240716095546420.png" class title="image-20240716095546420"> <img src="/posts/68728ca3/image-20240716095604518.png" class title="image-20240716095604518">
<h2 id="四元数的模-norm"><a href="#四元数的模-norm" class="headerlink" title="四元数的模 (norm)"></a>四元数的模 (norm)</h2><p>在复数中 :</p>
<img src="/posts/68728ca3/image-20240716101954773.png" class title="image-20240716101954773">
<p>则共轭四元数也可 :</p>
<img src="/posts/68728ca3/image-20240716102031318.png" class title="image-20240716102031318">
<img src="/posts/68728ca3/image-20240716102041248.png" class title="image-20240716102041248">
<h2 id="四元数归一化-normalization"><a href="#四元数归一化-normalization" class="headerlink" title="四元数归一化 (normalization)"></a>四元数归一化 (normalization)</h2><p>即表示为单位向量模式</p>
<p>向量除以向量的模</p>
<img src="/posts/68728ca3/image-20240716102809602.png" class title="image-20240716102809602">
<h2 id="四元数逆变-inverse"><a href="#四元数逆变-inverse" class="headerlink" title="四元数逆变 (inverse)"></a>四元数逆变 (inverse)</h2><img src="/posts/68728ca3/image-20240716102912448.png" class title="image-20240716102912448">
<img src="/posts/68728ca3/image-20240716102928445.png" class title="image-20240716102928445">
<p>对于单位四元数，有 :</p>
<img src="/posts/68728ca3/image-20240716103011373.png" class title="image-20240716103011373">
<h2 id="四元数的点乘-dot-product"><a href="#四元数的点乘-dot-product" class="headerlink" title="四元数的点乘 (dot product)"></a>四元数的点乘 (dot product)</h2><img src="/posts/68728ca3/image-20240716103106917.png" class title="image-20240716103106917">
<img src="/posts/68728ca3/image-20240716103126039.png" class title="image-20240716103126039">
<p>对于单位四元数，有 :</p>
<img src="/posts/68728ca3/image-20240716103143979.png" class title="image-20240716103143979">
<h2 id="三位空间旋转公式"><a href="#三位空间旋转公式" class="headerlink" title="三位空间旋转公式"></a>三位空间旋转公式</h2><p>由于实际中要旋转的向量在三维空间，所以将 $q_a$ 看做是第四维（实数部）为<code>0</code>的<strong>纯四元数</strong>，则 $q_a=[0,a]$ 或 $q_a=(0+x_ai+y_aj+z_ak)$) ，那么得到<strong>三维空间旋转公式</strong>:</p>
<script type="math/tex; mode=display">q_aq_b=[−a\centerdot b,s_ba+a×b]</script><h2 id="四元数与三维旋转"><a href="#四元数与三维旋转" class="headerlink" title="四元数与三维旋转"></a>四元数与三维旋转</h2><p>虚数 _ i（$i^2=-1$），即该虚数所在点绕圆心逆时针旋转 90 度；同理 _-i 即顺时针旋转 90 度</p>
<p><style>.bylnfqijriip{zoom:50%;}</style><img src="/posts/68728ca3/image-20240716084319542.png" class="bylnfqijriip" alt="image-20240716084319542"></p>
<h3 id="推导-（纯四元数）"><a href="#推导-（纯四元数）" class="headerlink" title="推导 （纯四元数）"></a>推导 （纯四元数）</h3><ol>
<li><p>定义一个四元数 q，使要旋转的向量旋转$\theta$ 度，v 是单位化转轴方向</p>
<p> $q=\cos\theta+i\sin\theta$ ( 复数式 )</p>
<p> $q=[\cos\theta,v\sin\theta]$ ( 坐标 )</p>
</li>
<li><p>计算四元数 q 与向量 p 的积，其中$p=[0,p]$ ( 纯四元数 )</p>
</li>
<li><p>引用<strong>三维空间旋转公式</strong>，旋转数 $q$ 对应 $q_b$, 待旋转向量 $p$ 对应 $p_a$ :</p>
<script type="math/tex; mode=display">p' = qp=[-p\centerdot v\sin\theta,\cos\theta p+v\sin\theta\times p]</script></li>
<li><p>当向量 p 与$v$ 正交( 垂直 )，此时$v\centerdot p=0$ ，同时$p’$变成了纯四元数 :</p>
<script type="math/tex; mode=display">p'=qp=[0,\cos\theta p+v\sin\theta\times p]</script></li>
<li><p>其中 $p’=qp$ 与 $p’=pq$ 结果不同，前者为逆时针，后者为顺时针</p>
</li>
</ol>
<h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><ol>
<li><p>例，将矢量 p 绕 z（k）轴旋转 45 度，则四元数$q=[\cos\theta,\sin\theta k]=[\frac{\sqrt{2}}{2},\frac{\sqrt{2}}{2}k]$</p>
</li>
<li><p>选一向量 p，使与 z 轴正交，假如 p 在 x（i）轴上，此时</p>
<script type="math/tex; mode=display">p=[0,2i+0j+0k]</script></li>
<li><p>由于 i 与 k 正交，点积为 0 :</p>
<img src="/posts/68728ca3/image-20240716145305409.png" class title="image-20240716145305409">
<img src="/posts/68728ca3/image-20240716151737501.png" class title="image-20240716151737501">
</li>
<li><p>若 $p’=pq$ ,则结果为 $[0,\sqrt{2}i-\sqrt{2}j]$,旋转方向相反</p>
</li>
<li>红色绕蓝色逆时针旋转 45 度得到黄色<br><style>.trdcncxkrcbf{zoom: 50%;}</style><img src="/posts/68728ca3/Quaternion-Rotation-13.png" class="trdcncxkrcbf" alt="img"></li>
</ol>
<h3 id="非纯四元数旋转"><a href="#非纯四元数旋转" class="headerlink" title="非纯四元数旋转"></a>非纯四元数旋转</h3><ol>
<li><p>一个正常四元数 q，与 p 不正交(p 仍为上文中的 p=[0.2i])，设定 q 的矢量部分与 p 夹角为 45 度,计算 p 绕 q 旋转$\theta$角度后得到的向量</p>
<img src="/posts/68728ca3/image-20240716152337654.png" class title="image-20240716152337654">
</li>
<li><p>代入<strong>三位空间旋转公式</strong></p>
<img src="/posts/68728ca3/image-20240716152435482.png" class title="image-20240716152435482">
</li>
<li><p>替换已知量</p>
<img src="/posts/68728ca3/image-20240716154207402.png" class title="image-20240716154207402">
</li>
<li><p>计算结果已经不是纯四元数，且没有旋转 45 度，模长也不是 2（而是$\sqrt{3}$）,用图像表示 :</p>
</li>
<li><p><style>.xnszkytjhrtd{zoom:50%;}</style><img src="/posts/68728ca3/Quaternion-Rotation-2.png" class="xnszkytjhrtd" alt="img"></p>
</li>
</ol>
<blockquote id="fn_注">
<sup>注</sup>. 此时严格来讲，p’在 3 为空间中表示是不正确的，因为它是一个 4 维向量，图片中只展示了这个四元数的像两部分<a href="#reffn_注" title="Jump back to footnote [注] in the text."> &#8617;</a>
</blockquote>
<ol>
<li><p>如何将其转变为纯四元数？Hamilton 发现，将 qp 右乘 q 的逆，将得到一个纯四元数，且该四元数的向量部分保持不变 : (因为 q 为单位四元数，此时 q 的逆等于 q 的共轭四元数)</p>
<img src="/posts/68728ca3/image-20240716155056302.png" class title="image-20240716155056302">
<p>$\theta = 45^\circ$</p>
<img src="/posts/68728ca3/image-20240716155124298.png" class title="image-20240716155124298">
<img src="/posts/68728ca3/image-20240716155346584.png" class title="image-20240716155346584">
<p>记$qpq^-1$为$p’$</p>
<img src="/posts/68728ca3/image-20240716155404171.png" class title="image-20240716155404171">
<p>求得 p’的模长与 p 相等</p>
<p><style>.sjhwtmzjuogn{zoom:50%;}</style><img src="/posts/68728ca3/Quaternion-Rotation-3.png" class="sjhwtmzjuogn" alt="img"></p>
</li>
<li><p>观察上图可发现，红色向量绕紫色向量旋转了 90 度而非 45 度，得到黄色向量，因此为了正确的让一个向量绕某个轴向量旋转某个角度，必须以目标角度的一般来计算 ，得到<strong>旋转四元数</strong>的一般形式:</p>
<img src="/posts/68728ca3/image-20240716161001706.png" class title="image-20240716161001706">
</li>
</ol>
<h2 id="小总结-四元数表达形式"><a href="#小总结-四元数表达形式" class="headerlink" title="小总结-四元数表达形式"></a>小总结-四元数表达形式</h2><p>矢量式 $\vec{Q}=q_0+\vec{q}$,其中$\vec{q}=q_1\vec{i}+q_2\vec{j}+q_3\vec{k}$</p>
<p>复数式 $\vec{Q}=q_0+q_1\vec{i}+q_2\vec{j}+q_3\vec{k}$</p>
<p>三角式 $\vec{Q}=\cos{\frac{\theta}{2}}+\vec{u}\sin{\frac{\theta}{2}}$,其中$\vec{u}=\vec{i}+\vec{j}+\vec{k}$</p>
<p>矩阵式 $\vec{Q}=\begin{bmatrix} q_0\\q_1\\q_2\\q_3\end{bmatrix}$</p>
<h2 id="四元数与旋转矩阵与姿态变化矩阵"><a href="#四元数与旋转矩阵与姿态变化矩阵" class="headerlink" title="四元数与旋转矩阵与姿态变化矩阵"></a>四元数与旋转矩阵与姿态变化矩阵</h2><p> 假设单位四元数$q=w+xi+yj+zk$,其中$||q||=x^2+y^2+z^2+w^2=1$，那么旋转矩阵 :</p>
<p>$R(q)=\begin{bmatrix}1-2y^2-2z^2&amp;2xy-2zw&amp;2xz+2yw\\2xy+2zw&amp;1-2x^2-2z^2&amp;2yz-2xw\\2xz-2yw&amp;2yz+2xw&amp;1-2x^2-2y^2\end{bmatrix}$</p>
<p>$c^E_b=\begin{bmatrix}w^2+x^2-y^2-z^2&amp;2xy-2zw&amp;2xz+2yw\\2xy+2zw&amp;w^2-x^2+y^2-z^2&amp;2yz-2xw\\2xz-2yw&amp;2yz+2xw&amp;w^2-x^2-y^2+z^2\end{bmatrix}$</p>
<h2 id="四元数与姿态角"><a href="#四元数与姿态角" class="headerlink" title="四元数与姿态角"></a>四元数与姿态角</h2><img src="/posts/68728ca3/image-20240716173419183.png" class title="image-20240716173419183">
<p>$2(xz-wy)=-\sin{\gamma}$</p>
<p>$2(yz+xw)=\sin{\theta}\cos{\gamma}$</p>
<p>$w^2-x^2-y^2+z^2=\cos{\theta}\cos{\gamma}$</p>
<p>$2(xy+zw)=\cos{\gamma}\sin{\psi}$</p>
<p>$w^2+x^2-y^2-z^2=\cos{\gamma}\cos{\psi}$</p>
<p>由上述公式可得 :</p>
<p>$\gamma=-\arcsin{(2(xz-wy))}$</p>
<p>$\theta=\arctan(\frac{2(yz+xw)}{w^2-x^2-y^2+z^2})$</p>
<p>$\psi=\arctan{\frac{2(xy+zw)}{w^2+x^2-y^2-z^2}}$</p>
<div class="note no-icon simple"><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接 :"></a>参考链接 :</h1><p>1.<a href="https://www.3dgep.com/understanding-quaternions/#The_Complex_Plane">understanding-quaternions</a></p>
<p>2.<a href="https://juejin.cn/post/7140527372100435976">从复数到四元数</a></p>
<p>3.<a href="https://zhuanlan.zhihu.com/p/45404840">三维旋转：欧拉角、四元数、旋转矩阵、轴角之间的转换 - 知乎 (zhihu.com)</a></p>
<p>4.<a href="https://blog.sciencenet.cn/blog-2777453-1075307.html">科学网—0034: 四元数与姿态矩阵（旋转矩阵）转换的公式 - 何成文的博文 (sciencenet.cn)</a></p>
<p>5.<a href="https://blog.csdn.net/guanjianhe/article/details/95608801">四元数解算姿态角解析_四元数姿态解算-CSDN 博客</a></p>
<p>6.<a href="https://gitcode.csdn.net/662b46fac647e032687df7f1.html?dp_token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZCI6Mzc3MDE0NSwiZXhwIjoxNzIxNzI3MzQ5LCJpYXQiOjE3MjExMjI1NDksInVzZXJuYW1lIjoid2VpeGluXzQ4NTUxNDExIn0.XNQEvQZ0hsGNzhkasX1q7Q9K-oWgF5Sn_l199R6cyIc">四元数——姿态解算_线性代数_m0_73654084-GitCode 开源社区 (csdn.net)</a></p>
<p>7.<span style="background:yellow"><a href="https://blog.csdn.net/zhangyufeikk/article/details/94594646">从原理到代码 梳理姿态更新计算的四元数算法_四元数姿态解算原理-CSDN 博客</a></span></p>
<p>8.<a href="https://blog.csdn.net/weixin_45632220/article/details/117735223">旋转矩阵及左右乘的意义，看这一篇就够了_旋转矩阵左乘和右乘的几何意义-CSDN 博客</a></p>
<p>9.<a href="https://www.doc88.com/p-43973791892306.html?s=like&amp;id=1">四元数解算姿态完全解析及资料汇总 - 道客巴巴 (doc88.com)</a></p>
<p>10.<a href="https://book.sciencereading.cn/shop/book/Booksimple/show.do?id=BB45EE804E6493EB6E053020B0A0AB410000">惯性导航（第三版） (sciencereading.cn)</a></p>
<p>11.<a href="https://blog.csdn.net/black_sneak/article/details/131253645">基于STM32的四旋翼无人机项目（二）：MPU6050姿态解算（含上位机3D姿态显示教学）-CSDN博客</a></p>
</div>
]]></content>
      <categories>
        <category>math</category>
      </categories>
  </entry>
  <entry>
    <title>导数&amp;微分&amp;积分</title>
    <url>/posts/7b740b99/</url>
    <content><![CDATA[<p>施工中</p>
<p><strong>一句话总结:</strong></p>
<p>导数求变化率</p>
<p>微分求变化量</p>
<p>积分求原函数</p>
<h1 id="导数"><a href="#导数" class="headerlink" title="导数"></a>导数</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>设函数$y=f(x)$在点$x_0$的某一个邻域内有定义，当自变量 x 在 $x_0$ 处有增量$\vartriangle x$，$(x_0+_\vartriangle x)$也在该邻域内时，相应的函数取得增量$\vartriangle y=f(x_0+\vartriangle x)-f(x+0)$；如果$\vartriangle y$与$\vartriangle x$之比当$\vartriangle x \rightarrow 0$时极限存在，则称函数$y=f(x)$在点$x_0$处可导，并称这个极限为函数$y=f(x)$在点$x_0$处的导数，记作$f’(x_0)$，$y’|x=x_0$,$\frac{dy}{dx}|x=x_0$即 :</p>
<script type="math/tex; mode=display">
f'(x_0)=\lim_{\vartriangle x\to 0} \frac{\vartriangle y}{n(\vartriangle x)}= \lim_{\vartriangle x \to 0} \frac{f(x_0+\vartriangle x)-f(x_0)}{\vartriangle x}</script><p><strong>函数在某点时，因变量随自变量变化的变化率情况。</strong></p>
<p>eg. 求某函数在某点上的切线的斜率 （导数的几何意义）</p>
<p><strong>注</strong>: 不要把导数与导函数混为一谈。导数是一个值，是函数在某一点的变化率；导函数是函数上每一个点的变化率构成的一个新的函数。</p>
<h2 id="连续性与可导性"><a href="#连续性与可导性" class="headerlink" title="连续性与可导性"></a>连续性与可导性</h2><p>若一个函数在区间 x 上的所有点都可导，则成这个函数在该区间上为可导函数。</p>
<p>函数可导 ——&gt; 函数连续</p>
<p>函数连续 -$\times$-&gt; 函数可导</p>
<h1 id="微分"><a href="#微分" class="headerlink" title="微分"></a>微分</h1><h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>若函数$y=f(x)$在点$x_0$的增量可以表示为$\vartriangle y=f(x_0+\vartriangle x)-f(x_0)=A\centerdot \vartriangle x+o(\vartriangle x)$,其中 A 是与$\vartriangle x$无关的常数，则称函数$y=f(x)$在点$x_0$可微，并称$A\centerdot\vartriangle x$为函数$y=f(x)$在点$x_0$的微分，记作 ：</p>
<p> $dy|_{x=x_0}$或$df(x_0)$,即$dy|_{x=x_0}=A\centerdot\vartriangle x$</p>
<p><strong>注</strong> : 导数与微分不能混为一谈，导数是极限值，微分是函数因变量的增量近似值</p>
<h2 id="微分的几何意义"><a href="#微分的几何意义" class="headerlink" title="微分的几何意义"></a>微分的几何意义</h2><img src="/posts/7b740b99/image-20240717103652538.png" class title="image-20240717103652538">
<p>当自变量由$x_0$增加到$x_0+\vartriangle x$时，函数增量$\vartriangle y = f(x_0 + \vartriangle x)-f(x_0) = RQ$</p>
<p>微分是指在点 P 处的切线与 $\vartriangle x$所对应的增量，即求的是在$x_0$处的切线，在 x 轴增加$\vartriangle x$后，y 轴对应增量 : $dy = f’(x_0)\vartriangle x = RQ’$</p>
<h2 id="可导与可微"><a href="#可导与可微" class="headerlink" title="可导与可微"></a>可导与可微</h2><p>可导是可微的充要条件</p>
<p><strong>eg.</strong> 求 $\sqrt[3]{998.5}$</p>
<ol>
<li><p>取$\sqrt[3]{1000}$，并求导</p>
</li>
<li><p>$\vartriangle x=998.5-1000=-1.5$</p>
</li>
<li><p>$f(x_0)’=(\sqrt[3]{1000})’=(1000^{\frac{1}{3}})’=\frac{1}{3}1000^{1-\frac{1}{3}}=\frac{1}{3}\sqrt[3]{(\frac{1}{1000})^2}=\frac{1}{3}\times \frac{1}{100}=\frac{1}{300}$</p>
</li>
<li><p>求$dy$，即$\sqrt[3]{998.5}-\sqrt[3]{1000}$, $dy=f(x_0)’\centerdot \vartriangle x=\frac{1}{300}\times -1.5=-\frac{1}{200}$</p>
</li>
<li><p>$\sqrt[3]{998.5}=\sqrt[3]{1000}+dy=10-\frac{1}{200}=9.995$</p>
</li>
<li><p>计算器计算结果:</p>
<img src="/posts/7b740b99/image-20240717113911665.png" class title="image-20240717113911665">
</li>
</ol>
<h2 id="常微分解法"><a href="#常微分解法" class="headerlink" title="常微分解法"></a>常微分解法</h2><p>只有线性常系数微分方程，且自由项是某些特殊类型的函数时，才可以肯定得到解；而绝大多数变系数方程、非线性方程都“解不出来“，<mark class="hl-label orange">eg.</mark> $\frac{dy}{dx}=y^2+x^2$</p>
<h3 id="常微分方程的离散化——数值解法"><a href="#常微分方程的离散化——数值解法" class="headerlink" title="常微分方程的离散化——数值解法"></a>常微分方程的离散化——数值解法</h3><img src="/posts/7b740b99/image-20240730095014098.png" class title="image-20240730095014098">
<div class="note default no-icon simple"><p>李普希茨条件: 限制函数增量变化大小的一种不等式形式的条件。</p>
<p>Lipschitz连续，要求函数图像的曲线上任意两点连线的斜率一致有界，就是任意的斜率都小于同一个常数，这个常数就是Lipschitz常数。</p>
<p>从局部看：我们可以取两个充分接近的点，如果这个时候斜率的极限存在的话，这个斜率的极限就是这个点的导数。也就是说函数可导，又是Lipschitz连续，那么导数有界。反过来，如果可导函数，导数有界，可以推出函数Lipschitz连续。</p>
<p>从整体看：Lipschitz连续要求函数在无限的区间上不能有超过线性的增长，所以这些和函数在无限区间上不是Lipschitz连续的。</p>
<p><strong>函数的极限斜率不能为无穷大</strong></p>
</div>
<img src="/posts/7b740b99/image-20240730105711817.png" class title="image-20240730105711817">
<h4 id="差商近似导数"><a href="#差商近似导数" class="headerlink" title="差商近似导数"></a>差商近似导数</h4><img src="/posts/7b740b99/image-20240730110337619.png" class title="image-20240730110337619">
<h4 id="数值积分方法"><a href="#数值积分方法" class="headerlink" title="数值积分方法"></a>数值积分方法</h4><img src="/posts/7b740b99/image-20240730110347369.png" class title="image-20240730110347369">
<h4 id="Taylor多项式近似值"><a href="#Taylor多项式近似值" class="headerlink" title="Taylor多项式近似值"></a>Taylor多项式近似值</h4><img src="/posts/7b740b99/image-20240730110404572.png" class title="image-20240730110404572">
<h3 id="欧拉-Euler-方法"><a href="#欧拉-Euler-方法" class="headerlink" title="欧拉(Euler)方法"></a>欧拉(Euler)方法</h3><h4 id="向前欧拉公式、向后欧拉公式"><a href="#向前欧拉公式、向后欧拉公式" class="headerlink" title="向前欧拉公式、向后欧拉公式"></a>向前欧拉公式、向后欧拉公式</h4><img src="/posts/7b740b99/image-20240730112740523.png" class title="image-20240730112740523">
<p><a href="https://www.bilibili.com/video/BV1v3411b7DK/?spm_id_from=333.788&amp;vd_source=d16ffe4c52f07b9a7e89fb3bddfc8e0f">【数值分析】轻松掌握欧拉法｜考试宝典｜简单易懂_哔哩哔哩_bilibili</a></p>
<p><style>.lwwgfcvtqlyh{zoom: 67%;}</style><img src="/posts/7b740b99/image-20240730145750638.png" class="lwwgfcvtqlyh" alt="image-20240730145750638"></p>
<p>x的每步步进为h</p>
<p><style>.fxfwxtgvoxbc{zoom: 50%;}</style><img src="/posts/7b740b99/image-20240730145828321.png" class="fxfwxtgvoxbc" alt="image-20240730145828321"></p>
<p><style>.nixqsmuwvaqw{zoom:67%;}</style><img src="/posts/7b740b99/image-20240730145750638.png" class="nixqsmuwvaqw" alt="image-20240730145750638"></p>
<p><a href="https://www.bilibili.com/video/BV12r4y1Q7Ae/?spm_id_from=333.788&amp;vd_source=d16ffe4c52f07b9a7e89fb3bddfc8e0f">【数值分析】轻松掌握梯形法改进欧拉法｜考试宝典｜速成_哔哩哔哩_bilibili</a></p>
<p><style>.srjdetwpooty{zoom:50%;}</style><img src="/posts/7b740b99/image-20240730150332455.png" class="srjdetwpooty" alt="image-20240730150332455"></p>
<p><style>.plfwgdtgfroj{zoom:67%;}</style><img src="/posts/7b740b99/image-20240730150533001.png" class="plfwgdtgfroj" alt="image-20240730150533001"><img src="/posts/7b740b99/image-20240730152635592.png" class title="image-20240730152635592"></p>
<p><style>.gpfhuttcwbpv{zoom: 50%;}</style><img src="/posts/7b740b99/image-20240730152635592.png" class="gpfhuttcwbpv" alt="image-20240730152635592"></p>
<p><style>.txsbfppjnpmg{zoom:50%;}</style><img src="/posts/7b740b99/image-20240730152944990.png" class="txsbfppjnpmg" alt="image-20240730152944990"></p>
<p>当h趋近于0时，梯形法和改进欧拉法得到极限值相同</p>
<h3 id="龙格-库塔方法"><a href="#龙格-库塔方法" class="headerlink" title="龙格-库塔方法"></a>龙格-库塔方法</h3><p><style>.fhsueaupuddy{}</style><img src="/posts/7b740b99/image-20240730160946340.png" class="fhsueaupuddy" alt="image-20240730160946340"></p>
<p><a href="https://www.bilibili.com/video/BV1rF41187YM/?spm_id_from=333.788&amp;vd_source=d16ffe4c52f07b9a7e89fb3bddfc8e0f">【数值分析】轻松理解龙格-库塔方法｜考前必看｜简单易懂_哔哩哔哩_bilibili</a></p>
<p><style>.jmmqvdhgmueu{zoom:67%;}</style><img src="/posts/7b740b99/image-20240730155752933.png" class="jmmqvdhgmueu" alt="image-20240730155752933"></p>
<img src="/posts/7b740b99/image-20240730161016428.png" class title="image-20240730161016428">
<h1 id="积分"><a href="#积分" class="headerlink" title="积分"></a>积分</h1><h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><h3 id="原函数"><a href="#原函数" class="headerlink" title="原函数"></a>原函数</h3><p>如果在区间 I 上，$F’(x)=f(x)$ 或 $dF(x)=f(x)dx$ , 则称 F(x) 为 f(x) 在 I 上的一个<strong>原函数</strong></p>
<h3 id="不定积分"><a href="#不定积分" class="headerlink" title="不定积分"></a>不定积分</h3><p>设 F(x)是 f(x)的任一原函数，则 f(x)的全部原函数的一般表达式 F(x)+C 称为 f(x)的<strong>不定积分</strong>，记为 $\int f(x)dx$</p>
<p><strong>不定积分是一种运算，与微分运算互逆</strong></p>
<h3 id="定积分"><a href="#定积分" class="headerlink" title="定积分"></a>定积分</h3><p>设函数 f(x)在[a,b]上有界，在[a,b]中==任意==插入若干分点$a=x_0&lt;x_1&lt;x_2&lt;…&lt;x_{n-1}&lt;x_n=b$,把区间[a,b]分成 n 个小区间，各小区间长度依次为$\Delta x_i=x_i-x_{i-1},(i=1,2,…,n)$,在各小区间上==任取==一点$\xi_i(\xi_i \in \Delta x_i)$,作乘积$f(\xi_i)\Delta x_i(i=1,2,…,n)$，并作和$S=\sum_{i=1}^n{f(\xi_i)\Delta x_i}$</p>
<p>定积分是一种求和运算，求一个具体的函数在具体的区间内，与 x 轴围成图形的具体面积</p>
<img src="/posts/7b740b99/20200523164722792.png" class width="20200523164722792">
<div class="note no-icon simple"><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接 :"></a>参考链接 :</h1><p>1.<a href="https://blog.csdn.net/baidu_39491365/article/details/89856302">什么是微分？导数和微分的区别是什么？微分和积分的联系？_微分积分的区别和联系-CSDN 博客</a></p>
<p>2.<a href="https://blog.csdn.net/weixin_43148062/article/details/106302533">高等数学导数公式、微分公式和积分公式大全_常用微分公式 知乎-CSDN 博客</a></p>
<p>3.<a href="https://blog.csdn.net/weixin_40163242/article/details/89003225">高等数学上核心概念：谈谈导数，微分，积分之间的关系（导数篇）_微分、积分、微积分、导数之详细辨别-CSDN 博客</a></p>
<p>4.<a href="https://blog.csdn.net/weixin_40163242/article/details/89004822">高等数学上核心概念：谈谈导数，微分，积分之间的关系（微分篇）_极限导数微分积分四者关系图-CSDN 博客</a></p>
<p>5.<a href="https://blog.csdn.net/m0_37827994/article/details/85004004">导数、微分、积分的几何理解_微分和积分的几何意义-CSDN 博客</a></p>
<p>6.<a href="https://blog.csdn.net/liuyiming2019/article/details/108938333">【高数】高数第四章节——不定积分&amp;换元积分&amp;分部积分_四种典型部分分式的积分-CSDN 博客</a></p>
<p>7.<a href="https://blog.csdn.net/liuyiming2019/article/details/108942293">【高数】高数第五章节——定积分&amp;积分上限函数&amp;牛顿——莱布尼兹公式&amp;反常积分与广义积分_定积分求导法则在高数的那一节-CSDN 博客</a></p>
<p>8.<a href="https://blog.csdn.net/hsl1958941040/article/details/123841175">不定积分、定积分的区别与联系_定积分和不定积分区别-CSDN 博客</a></p>
<p>9.<a href="https://blog.csdn.net/qq_29831163/article/details/89703598">常微分方程的解法 (三): 龙格—库塔（Runge—Kutta）方法 、线性多步法_龙哥库塔是线性多步法-CSDN博客</a></p>
<p>10.<a href="https://blog.csdn.net/chaofeili/article/details/110072841">利普希茨连续（Lipschitz continuous）及其应用_lipschitz连续-CSDN博客</a></p>
</div>]]></content>
      <categories>
        <category>math</category>
      </categories>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/posts/4a17b156/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<span id="more"></span>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
      <categories>
        <category>test</category>
      </categories>
  </entry>
  <entry>
    <title>四元数姿态解算</title>
    <url>/posts/af54305b/</url>
    <content><![CDATA[<div class="note danger flat"><p>本文绝大多数内容为参考链接1、2的整理和理解，大都复制粘贴</p>
</div>
<div class="note success flat"><p>绿色为本人补充或理解内容，如此条所示</p>
</div>
<h1 id="四元数姿态阶段原理理解"><a href="#四元数姿态阶段原理理解" class="headerlink" title="四元数姿态阶段原理理解"></a>四元数姿态阶段原理理解</h1><h2 id="常用关系式—参考链接2-p5"><a href="#常用关系式—参考链接2-p5" class="headerlink" title="常用关系式—参考链接2-p5"></a>常用关系式—参考链接2-p5</h2><h3 id="坐标变换"><a href="#坐标变换" class="headerlink" title="坐标变换"></a>坐标变换</h3><img src="/posts/af54305b/image-20240731101657179.png" class title="image-20240731101657179">
<img src="/posts/af54305b/image-20240731101718365.png" class title="image-20240731101718365">
<img src="/posts/af54305b/image-20240731101733836.png" class title="image-20240731101733836">
<img src="/posts/af54305b/image-20240731110807938.png" class title="image-20240731110807938">
<img src="/posts/af54305b/image-20240731110907248.png" class title="image-20240731110907248">
<img src="/posts/af54305b/image-20240731111006750.png" class title="image-20240731111006750">
<h3 id="矢量的叉乘"><a href="#矢量的叉乘" class="headerlink" title="矢量的叉乘"></a>矢量的叉乘</h3><img src="/posts/af54305b/image-20240731111104302.png" class title="image-20240731111104302">
<div class="note success flat"><p><strong>r</strong>的模代表<strong>r</strong>的长度，单位矢量表示<strong>r</strong>的方向</p>
</div>
<h3 id="哥氏定理"><a href="#哥氏定理" class="headerlink" title="哥氏定理"></a>哥氏定理</h3><img src="/posts/af54305b/image-20240731111309859.png" class title="image-20240731111309859">
<h2 id="姿态更新计算的四元数算法—参考链接2-p256"><a href="#姿态更新计算的四元数算法—参考链接2-p256" class="headerlink" title="姿态更新计算的四元数算法—参考链接2-p256"></a>姿态更新计算的四元数算法—参考链接2-p256</h2><h3 id="四元数与姿态阵间的关系"><a href="#四元数与姿态阵间的关系" class="headerlink" title="四元数与姿态阵间的关系"></a>四元数与姿态阵间的关系</h3><div class="note success flat"><p><a href="https://wdxxzh.github.io/posts/68728ca3/">四元数相关计算方法</a></p>
<p><strong>向量点乘</strong>: 又称内积、数量积，结果是一个向量在另一个向量方向上投影的长度，为一个标量。$\vec{a}\centerdot\vec{b}=|a||b|\cos{\theta}$，$\vec{a}\centerdot\vec{b}=\vec{b}\centerdot\vec{a}$</p>
<p><strong>向量叉乘</strong>: 又称外积、向量积，两向量的叉积与这两个向量组成的坐标平面垂直，结果为一个法向量。$\vec{a}\times\vec{b}=|a||b|\sin{\theta}$，$\vec{a}\times\vec{b}$与$\vec{b}\times\vec{a}$的结果为两个大小相等，方向相反的向量。</p>
</div>
<img src="/posts/af54305b/image-20240731141209942.png" class title="image-20240731141209942">
<div class="note success flat"><p>$OO’=(\vec{r}\centerdot\vec{u})\vec{u}$:  $\vec{r}\centerdot\vec{u}$，为$\vec{r}$在$\vec{u}$方向上的投影长度，乘以$\vec{u}$相当于给这个投影方向，方向与$\vec{u}$方向一致。</p>
<p>$\vec{O’B}=\vec{u}\times\vec{O’A}$: O’B为垂直于由O’A和向量u构成的坐标系平面的向量，且依据右手定则，为$\vec{u}\times\vec{O’A}$而非$\vec{O’A}\times\vec{u}$</p>
<p><strong>三重矢积计算公式(也被称为拉格朗日公式): </strong></p>
<script type="math/tex; mode=display">(\vec{a}\times\vec{b})\times\vec{c}=(\vec{a}\centerdot\vec{c})\vec{b}-(\vec{b}\centerdot\vec{c})\vec{a}</script><script type="math/tex; mode=display">\vec{a}\times(\vec{b}\times\vec{c})=(\vec{a}\centerdot\vec{c})\vec{b}-(\vec{a}\centerdot\vec{b})\vec{c}</script><p>在 <img src="/posts/af54305b/image-20240731151705307.png" class title="image-20240731151705307"></p>
<p>中，$\vec{u}$为单位向量，所以$\vec{u}\centerdot\vec{u}=1$，又因$\vec{u}\centerdot\vec{r}=\vec{r}\centerdot\vec{u}$，故上式计算结果为<img src="/posts/af54305b/image-20240731152343545.png" class title="image-20240731152343545"></p>
</div>
<img src="/posts/af54305b/image-20240731141219900.png" class title="image-20240731141219900">
<img src="/posts/af54305b/image-20240731144714459.png" class title="image-20240731144714459">
<div class="note success flat"><p>式9.2.23: 见1.2 矢量的叉乘</p>
<p><img src="/posts/af54305b/image-20240731155137625.png" class title="image-20240731155137625"></p>
<p>式9.2.24: </p>
<p>​    根据三角函数倍角公式$\sin{2\theta}=2\sin{\theta}\cos{\theta}$，则$\sin{\theta}=2sin{\frac{\theta}{2}}cos{\frac{\theta}{2}}$</p>
<p>​    根据半角公式$\sin{\frac{\theta}{2}}=\pm\sqrt{\frac{1-\cos{\theta}}{2}}$，则$1-\cos{\theta}=2\sin^2{\frac{\theta}{2}}$</p>
</div>
<img src="/posts/af54305b/image-20240731144726694.png" class title="image-20240731144726694">
<img src="/posts/af54305b/image-20240731144743919.png" class title="image-20240731144743919">
<img src="/posts/af54305b/image-20240731144759217.png" class title="image-20240731144759217">
<img src="/posts/af54305b/image-20240731144616387.png" class title="image-20240731144616387">
<div class="note success flat"><p>$\bigotimes$ 克罗内克积</p>
<p>定义: 如果A是一个$m\times n$的矩阵，B是一个$p\times q$的矩阵，则$A\bigotimes B$是一个$mp\times nq$的分块矩阵。</p>
<p><img src="/posts/af54305b/image-20240801104436015.png" class title="image-20240801104436015"></p>
</div>
<img src="/posts/af54305b/image-20240731162954948.png" class title="image-20240731162954948">
<img src="/posts/af54305b/image-20240731163008286.png" class title="image-20240731163008286">
<img src="/posts/af54305b/image-20240731163018511.png" class title="image-20240731163018511">
<img src="/posts/af54305b/image-20240731163030518.png" class title="image-20240731163030518">
<div class="note success flat"><p><strong>反对称矩阵</strong></p>
<p>定义: 设A为n维方阵，若有A’=-A，则称矩阵A维反对称矩阵。</p>
<p>反对称矩阵主对角线上的元素全为0，主对角线两侧对称的元素符号相反。</p>
<p><strong>向量的反对称矩阵</strong></p>
<p> <img src="/posts/af54305b/image-20240801101412702.png" class title="image-20240801101412702"></p>
<p><style>.lduexypvnwpi{zoom:80%;}</style><img src="/posts/af54305b/image-20240801095647170.png" class="lduexypvnwpi" alt="image-20240801095647170"></p>
</div>
<h3 id="四元数微分方程"><a href="#四元数微分方程" class="headerlink" title="四元数微分方程"></a>四元数微分方程</h3><div class="note success flat"><p>看不太懂。。。先放着</p>
</div>
<img src="/posts/af54305b/image-20240801102147995.png" class title="image-20240801102147995">
<img src="/posts/af54305b/image-20240801102255120.png" class title="image-20240801102255120">
<div class="note default flat"><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接 :"></a>参考链接 :</h1><p>1.<a href="https://www.doc88.com/p-43973791892306.html?s=like&amp;id=1">四元数解算姿态完全解析及资料汇总 - 道客巴巴 (doc88.com)</a></p>
<p>2.<a href="https://book.sciencereading.cn/shop/book/Booksimple/show.do?id=BB45EE804E6493EB6E053020B0A0AB410000">惯性导航（第三版） (sciencereading.cn)</a></p>
<p>3.<a href="https://baike.baidu.com/item/捷联惯导系统/4110350">捷联惯导系统_百度百科 (baidu.com)</a></p>
<p>4.<a href="https://blog.csdn.net/qq_35043589/article/details/78878850">叉乘与反对称矩阵-CSDN博客</a></p>
<p>5.<a href="https://www.coonote.com/note/vector-dot-multiplication-matrix.html">向量和矩阵的点乘和叉乘-菜鸟笔记 (coonote.com)</a></p>
<p>6.<a href="https://blog.csdn.net/caoyuan666/article/details/106784027">矩阵运算中一个圆圈里面一个乘号是什么运算？—— 克罗内克积_矩阵圈乘-CSDN博客</a></p>
</div>
]]></content>
      <categories>
        <category>math</category>
      </categories>
  </entry>
  <entry>
    <title>test_test</title>
    <url>/posts/dd0654c3/</url>
    <content><![CDATA[<h1 id="插入图片"><a href="#插入图片" class="headerlink" title="插入图片"></a>插入图片</h1><p>语句:<br><img src="/posts/dd0654c3/insertimg.png" class title="insertimg"></p>
<p><strong>注 : 存放图片的文件夹应与文件名相同，图片链接也相同，本文文件名为 test-test,存放图片文件夹为 test-test，文章标题为 test_test</strong></p>
<p>效果:</p>
<img src="/posts/dd0654c3/kafuka.jpg" class title="kafuka">
<h1 id="插入网页连接"><a href="#插入网页连接" class="headerlink" title="插入网页连接"></a>插入网页连接</h1><p>直接输入即可<br><a href="https://github.com/WDXXZH">https://github.com/WDXXZH</a></p>
<h1 id="插入代码块"><a href="#插入代码块" class="headerlink" title="插入代码块"></a>插入代码块</h1><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> i;</span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++&gt;)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;OK\n&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="行内公式"><a href="#行内公式" class="headerlink" title="行内公式"></a>行内公式</h1><p>测试测试$\frac{\sin{x}}{\cos{x}}$测试测试</p>
<h1 id="公式块"><a href="#公式块" class="headerlink" title="公式块"></a>公式块</h1><script type="math/tex; mode=display">
\frac{\sin{x}}{\cos{x}}</script><p>公式块不显示 —待解决</p>
<h1 id="文字高亮"><a href="#文字高亮" class="headerlink" title="文字高亮"></a>文字高亮</h1><p><span style="background:yellow">文字</span></p>
<h1 id="文字加粗"><a href="#文字加粗" class="headerlink" title="文字加粗"></a>文字加粗</h1><p><strong>文字</strong></p>
<h1 id="标签（hexo）"><a href="#标签（hexo）" class="headerlink" title="标签（hexo）"></a>标签（hexo）</h1><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% note simple %&#125;</span><br><span class="line">默认 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default simple %&#125;</span><br><span class="line">default 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary simple %&#125;</span><br><span class="line">primary 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success simple %&#125;</span><br><span class="line">success 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info simple %&#125;</span><br><span class="line">info 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning simple %&#125;</span><br><span class="line">warning 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger simple %&#125;</span><br><span class="line">danger 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>
<div class="note modern"><p>默认 提示块标签</p>
</div>
<div class="note default modern"><p>default 提示块标签</p>
</div>
<div class="note primary modern"><p>primary 提示块标签</p>
</div>
<div class="note success modern"><p>success 提示块标签</p>
</div>
<div class="note info modern"><p>info 提示块标签</p>
</div>
<div class="note warning modern"><p>warning 提示块标签</p>
</div>
<div class="note danger modern"><p>danger 提示块标签</p>
</div>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% note modern %&#125;</span><br><span class="line">默认 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default modern %&#125;</span><br><span class="line">default 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary modern %&#125;</span><br><span class="line">primary 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success modern %&#125;</span><br><span class="line">success 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info modern %&#125;</span><br><span class="line">info 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning modern %&#125;</span><br><span class="line">warning 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger modern %&#125;</span><br><span class="line">danger 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>
<div class="note modern"><p>默认 提示块标签</p>
</div>
<div class="note default modern"><p>default 提示块标签</p>
</div>
<div class="note primary modern"><p>primary 提示块标签</p>
</div>
<div class="note success modern"><p>success 提示块标签</p>
</div>
<div class="note info modern"><p>info 提示块标签</p>
</div>
<div class="note warning modern"><p>warning 提示块标签</p>
</div>
<div class="note danger modern"><p>danger 提示块标签</p>
</div>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% note flat %&#125;</span><br><span class="line">默认 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default flat %&#125;</span><br><span class="line">default 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary flat %&#125;</span><br><span class="line">primary 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success flat %&#125;</span><br><span class="line">success 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info flat %&#125;</span><br><span class="line">info 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning flat %&#125;</span><br><span class="line">warning 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger flat %&#125;</span><br><span class="line">danger 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>
<div class="note flat"><p>默认 提示块标签</p>
</div>
<div class="note default flat"><p>default 提示块标签</p>
</div>
<div class="note primary flat"><p>primary 提示块标签</p>
</div>
<div class="note success flat"><p>success 提示块标签</p>
</div>
<div class="note info flat"><p>info 提示块标签</p>
</div>
<div class="note warning flat"><p>warning 提示块标签</p>
</div>
<div class="note danger flat"><p>danger 提示块标签</p>
</div>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% note disabled %&#125;</span><br><span class="line">默认 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default disabled %&#125;</span><br><span class="line">default 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary disabled %&#125;</span><br><span class="line">primary 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success disabled %&#125;</span><br><span class="line">success 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info disabled %&#125;</span><br><span class="line">info 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning disabled %&#125;</span><br><span class="line">warning 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger disabled %&#125;</span><br><span class="line">danger 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>
<div class="note disabled"><p>默认 提示块标签</p>
</div>
<div class="note default disabled"><p>default 提示块标签</p>
</div>
<div class="note primary disabled"><p>primary 提示块标签</p>
</div>
<div class="note success disabled"><p>success 提示块标签</p>
</div>
<div class="note info disabled"><p>info 提示块标签</p>
</div>
<div class="note warning disabled"><p>warning 提示块标签</p>
</div>
<div class="note danger disabled"><p>danger 提示块标签</p>
</div>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% note no-icon %&#125;</span><br><span class="line">默认 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default no-icon %&#125;</span><br><span class="line">default 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary no-icon %&#125;</span><br><span class="line">primary 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success no-icon %&#125;</span><br><span class="line">success 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info no-icon %&#125;</span><br><span class="line">info 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning no-icon %&#125;</span><br><span class="line">warning 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger no-icon %&#125;</span><br><span class="line">danger 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>
<div class="note no-icon simple"><p>默认 提示块标签</p>
</div>
<div class="note default no-icon simple"><p>default 提示块标签</p>
</div>
<div class="note primary no-icon simple"><p>primary 提示块标签</p>
</div>
<div class="note success no-icon simple"><p>success 提示块标签</p>
</div>
<div class="note info no-icon simple"><p>info 提示块标签</p>
</div>
<div class="note warning no-icon simple"><p>warning 提示块标签</p>
</div>
<div class="note danger no-icon simple"><p>danger 提示块标签</p>
</div>
<h1 id="Tabs"><a href="#Tabs" class="headerlink" title="Tabs"></a>Tabs</h1><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% tabs test1 %&#125;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"></span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line"></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"></span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line"></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"></span><br><span class="line"><span class="strong">**This is Tab 3.**</span></span><br><span class="line"></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure>
<div class="tabs" id="test1"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test1-1">test1 1</button><button type="button" class="tab " data-href="test1-2">test1 2</button><button type="button" class="tab " data-href="test1-3">test1 3</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><p><strong>This is Tab 1.</strong></p></div><div class="tab-item-content" id="test1-2"><p><strong>This is Tab 2.</strong></p></div><div class="tab-item-content" id="test1-3"><p><strong>This is Tab 3.</strong></p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div>
<p>参考链接:<br><a href="https://butterfly.js.org/posts/4aa8abbe/">https://butterfly.js.org/posts/4aa8abbe/</a><br><a href="https://butterfly.js.org/posts/dc584b87/">https://butterfly.js.org/posts/dc584b87/</a></p>
]]></content>
      <categories>
        <category>test</category>
      </categories>
  </entry>
</search>
